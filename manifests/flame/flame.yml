---
apiVersion: v1
kind: Namespace
metadata:
  name: flame
  # annotations:
  #   linkerd.io/inject: enabled

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: flame-tls
  namespace: flame
spec:
  secretName: flame-tls
  privateKey:
    rotationPolicy: Always 
  dnsNames:
    - dash.claytonc.dev
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
    group: cert-manager.io

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: flame
  namespace: flame

spec:
  entryPoints:
    - web
    - websecure

  routes:
  - match: Host(`dash.claytonc.dev`)
    kind: Rule
    services:
    - name: flame
      port: 80
  tls:
    secretName: flame-tls

---
apiVersion: v1
kind: Secret
metadata:
  name: flame-secret
data:
  PASSWORD: azgzZmRuc2p0a2V3K28w

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flame
  labels:
    app: flame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flame
  template:
    metadata:
      labels:
        app: flame
    spec:
      containers:
      - name: flame
        image: pawelmalak/flame:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 5005
        env:
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: flame-secret
                key: PASSWORD
                optional: false
        volumeMounts:
          - mountPath: "/app/data"
            name: flame-data
      volumes:
        - name: flame-data
          persistentVolumeClaim:
            claimName: flame-data

---
apiVersion: v1
kind: Service
metadata:
  name: flame
spec:
  selector:
    app: flame
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5005

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flame-data
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

