---
apiVersion: v1
kind: Namespace
metadata:
  name: uptime
  annotations:
    linkerd.io/inject: enabled

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime-kuma
  labels:
    app: uptime-kuma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uptime-kuma
  template:
    metadata:
      labels:
        app: uptime-kuma
    spec:
      containers:
      - name: uptime-kuma
        image: louislam/uptime-kuma:debian
        resources:
         requests:
           memory: "64Mi"
           cpu: "250m"
         limits:
           memory: "128Mi"
           cpu: "500m"
        env:
        - name: UPTIME_KUMA_PORT
          value: "3001"
        ports:
        - containerPort: 3001
        volumeMounts:
          - mountPath: "/app/data"
            name: uptime-data
      volumes:
        - name: uptime-data
          persistentVolumeClaim:
            claimName: uptime-data

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: uptime-tls
  namespace: uptime
spec:
  secretName: uptime-tls
  privateKey:
    rotationPolicy: Always 
  dnsNames:
    - uptime.claytonc.dev
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
    group: cert-manager.io

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: uptime-kuma
  namespace: uptime
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host(`uptime.claytonc.dev`)
    kind: Rule
    services:
    - name: uptime-kuma
      port: 80
  tls:
    secretName: uptime-tls

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uptime-data
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: uptime-kuma
spec:
  selector:
    app: uptime-kuma
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
