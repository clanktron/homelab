apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: home-assistant
  namespace: argocd
spec:
  destination:
    name: ''
    namespace: home-assistant
    server: 'https://kubernetes.default.svc'
  source:
    path: ''
    repoURL: 'https://k8s-at-home.com/charts/'
    targetRevision: 2.6.5
    chart: home-assistant
    helm:
      values: |-


image:
  # -- image repository
  repository: ghcr.io/home-assistant/home-assistant
  # -- image tag
  # @default -- chart.appVersion
  tag:
  # -- image pull policy
  pullPolicy: IfNotPresent

# -- environment variables.
# @default -- See below
env:
  # -- Set the container timezone
  TZ: PT

# -- Configures service settings for the chart. Normally this does not need to be modified.
# @default -- See values.yaml
service:
  main:
    ports:
      http:
        port: 8123

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: false

# -- Enable devices to be discoverable
hostNetwork: true

# -- When hostNetwork is true set dnsPolicy to ClusterFirstWithHostNet
dnsPolicy: ClusterFirstWithHostNet

securityContext:
  # -- (bool) Privileged securityContext may be required if USB devics are accessed directly through the host machine
  privileged:  # true

# -- Configure persistence settings for the chart under this key.
# @default -- See values.yaml
persistence:
  config:
    enabled: true
  # -- Configure a hostPathMount to mount a USB device in the container.
  # @default -- See values.yaml
  usb:
    enabled: false
    type: hostPath
    hostPath: /path/to/device

postgresql:
  enabled: true
  image:
    repository: bitnami/postgresql
    tag: 14.1.0
  postgresqlUsername: home-assistant
  postgresqlPassword: home-assistant-pass
  postgresqlDatabase: home-assistant
  persistence:
    primary:
      enabled: true
      # storageClass: ""

metrics:
  # -- Enable and configure a Prometheus serviceMonitor for the chart under this key.
  # @default -- See values.yaml
  enabled: true
  serviceMonitor:
    interval: 1m
    scrapeTimeout: 30s
    labels: {}
    ## See https://www.home-assistant.io/docs/authentication/ for where to find
    ## long lived access token creation under your account profile, which is
    ## needed to monitor Home Assistant
    # bearerTokenSecret:
    #   name: ""
    #   key: ""



addons:
  # -- Enable and configure codeserver for the chart.
  #    This allows for easy access to configuration.yaml
  # @default -- See values.yaml
  codeserver:
    enabled: true
    args:
      - --auth
      - none
      - --user-data-dir
      - /data/config/.vscode
    volumeMounts:
    - name: config
      mountPath: /data/config


  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - PruneLast=true
      - ApplyOutOfSyncOnly=true
      - CreateNamespace=true


